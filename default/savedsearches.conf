[default]

[MOI: host/type/user piechart]
search = tag=moi | lookup jobstart host OUTPUT user,jobid | eval hosttypeuser=host."/".eventtype."/".user | chart count by hosttypeuser
cron_schedule = No value selected
dispatch.latest_time = now
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
dispatch.earliest_time = -3d@h
vsid = *:g83itay1

[MOI: type/user piechart]
search = daysago=3 tag=moi | lookup jobstart host OUTPUT user,jobid | eval typeuser=eventtype."/".user | chart distinct_count(jobid) as jobs by typeuser
cron_schedule = No value selected
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
dispatch.earliest_time = -72h@h
vsid = *:g87t016n

[MOI: type,user,job table]
search = tag=moi | eval eventtype=if(isint(rc),eventtype.rc,eventtype) | lookup jobstart host OUTPUT user,jobid | stats count by eventtype,user,jobid | sort -jobid
cron_schedule = No value selected
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
dispatch.earliest_time = -3d@h
vsid = g80h9n5u

[MOI: jobcount piechart]
search = tag=moi | eval eventtype=if(isint(rc),eventtype.rc,eventtype) | lookup jobstart host OUTPUT user,jobid  | eval typeuser=eventtype."/".user | chart distinct_count(jobid) by typeuser
cron_schedule = No value selected
dispatch.latest_time = now
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
dispatch.earliest_time = -3d@h
vsid = *:g87vpytz

[MOI: hostcount piechart]
search = tag=moi | eval eventtype=if(isint(rc),eventtype.rc,eventtype) | lookup jobstart host OUTPUT user,jobid  | eval typeuser=eventtype."/".user | chart distinct_count(host) by typeuser
cron_schedule = No value selected
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
dispatch.earliest_time = -3d@h
vsid = *:g8ajbtlq

[MOI: user vs type table]
search = tag=moi | ctable user eventtype
cron_schedule = No value selected
dispatch.latest_time = +0s
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
dispatch.earliest_time = -7d@h
vsid = g2z4xtxq
action.email.sendresults = 0

[MOI: host vs type table]
search = tag=moi | ctable host eventtype
cron_schedule = No value selected
dispatch.latest_time = +0s
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
dispatch.earliest_time = -7d@h
vsid = g2xudhzu
action.email.sendresults = 0
description = Table of host vs alert type

[MOI: host vs user table]
search = tag=moi | ctable host user
cron_schedule = No value selected
dispatch.latest_time = +0s
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
dispatch.earliest_time = -7d@h
vsid = g2z4t3y8
action.email.sendresults = 0

[MOI: host/type/user timechart]
search = daysago=3 tag=moi | eval typeuser=host."/".eventtype."/".user | timechart count by typeuser
cron_schedule = No value selected
dispatch.latest_time = +0s
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
dispatch.earliest_time = -3d@h
vsid = *:g3hpheze
action.email.sendresults = 0
description = Alerts grouped by host/type/user over last three days

[MOI: host/type timechart]
search = tag=moi | eval hosttype=host."/".eventtype | timechart count by hosttype
cron_schedule = */5 * * * *
dispatch.latest_time = +0s
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
dispatch.earliest_time = -3d@h
vsid = *:g3hgjtxd
action.email.sendresults = 0
description = Alerts grouped by host/type for last three days

[Moab: Reservations:Names]
is_visible = 1
search = daysago=60 sourcetype=moabstats otype=rsv | ctable etype rsvid
cron_schedule = No value selected
dispatch.latest_time = +0s
displayview = flashtimeline
dispatch.earliest_time = -90d@d
vsid = *:z3sodp2c

[Moab: node up/down]
search = sourcetype=moabstats otype=node | ctable node etype
cron_schedule = No value selected
dispatch.latest_time = +0s
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
dispatch.earliest_time = -7d@h
vsid = g309p21m
action.email.sendresults = 0


[Slurm: name vs JobState]
search = sourcetype=joblog | ctable name JobState
cron_schedule = No value selected
dispatch.latest_time = +0s
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
dispatch.earliest_time = -7d@h
vsid = g2z4u7zy
action.email.sendresults = 0

[Slurm: name vs user]
search = sourcetype=joblog | ctable name user
cron_schedule = No value selected
dispatch.latest_time = +0s
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
dispatch.earliest_time = -7d@h
vsid = g2z4upte
action.email.sendresults = 0

[Slurm: user vs JobState]
search = sourcetype=joblog NOT JobState=completed| ctable user JobState
cron_schedule = No value selected
dispatch.latest_time = +0s
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
dispatch.earliest_time = -7d@d
vsid = g2z4v6bw
action.email.sendresults = 0
description = Unsucessful jobs, by user

[Admin: exampleCosMoi]
search = earliest=-30d tag=moi OR eventtype=cos_* | dedup eventtype | rename _raw AS msg | fields + eventtype msg | fields - _* | outputlookup max=0 exampleCosMoi.csv
cron_schedule = No value selected
dispatch.latest_time = +0s
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
description = Save example COS and MOI events to a lookup table
disabled = 1


[Admin: updateCOSlookup]
search = earliest=10/13/2011:0:0:0 index=summary NOT StateName | rename _time AS time | rename orig_host AS host | fields + time host oldState newState | fields - _* | outputlookup max=0 cos.csv.gz
cron_schedule = No value selected
dispatch.latest_time = +0s
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
description = Save COS states to a lookup table
disabled = 1

[Admin: COScandidates]
search = earliest=10/13/2011:0:0:0 tag=moi OR eventtype=cos_* NOT eventtype=MOABJOBSTART | lookup cos host AS nid | rename _time AS time | rename newState as State | rename nid AS host | fields + time host State eventtype | fields - _* | outputlookup candidates.csv.gz
cron_schedule = No value selected
dispatch.latest_time = +0s
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
description = Save COS candidates and MOI to a lookup file
disabled = 1

[Admin: resetJobLookup]
action.email.inline = 1
alert.suppress = 0
alert.suppress.period = h
alert.track = 0
cron_schedule = 1 2 * * *
dispatch.earliest_time = -15day@day
displayview = flashtimeline
enableSched = 1
description = Reset the job lookup file to contain only the last 15 days of jobs
search = sourcetype=moabstats hosts=* (etype=jobstart OR etype=jobend OR etype=jobcancel) | fields - _raw _cd _kv _serial _si _sourcetype _indextime _time | dedup jobid start etype | eval time=if(etype="JOBSTART",start,end) | eval jobid=if(etype=="JOBSTART",jobid,null()) | eval user=if(etype=="JOBSTART",user,null()) | convert timeformat="%m/%d/%Y:%H:%M:%S" ctime(time) | lookup hostlist short AS hosts OUTPUT long AS host | makemv delim="," host | mvexpand host | lookup cray index nid AS host OUTPUT nodename | eval host=if(isnotnull(nodename),nodename,host) | fields + time,index,host,jobid,user | outputlookup max=9999999999 job.csv.gz | where NOT isnull(jobid) | outputlookup max=999999999 jobstart.csv.gz

# leaving the _bkt field in the above and below seems to somehow make the `job` macro faster (not fully confirmed...)
[Admin: updateJobLookup]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.suppress.period = h
alert.track = 0
cron_schedule = */5 * * * *
displayview = flashtimeline
enableSched = 1
request.ui_dispatch_view = flashtimeline
description = Updates the job lookup file with jobs since it was last written
search =  [ | inputlookup job.csv.gz | head 1 | eval search="sourcetype=moabstats hosts=* (etype=jobstart OR etype=jobend OR etype=jobcancel) earliest=\"".time."\" start>\"".time."\"" | fields + search ] | fields - _raw _cd _kv _serial _si _sourcetype _indextime _time | dedup jobid start etype | eval time=if(etype="JOBSTART",start,end) | eval jobid=if(etype=="JOBSTART",jobid,null()) | eval user=if(etype=="JOBSTART",user,null()) | convert timeformat="%m/%d/%Y:%H:%M:%S" ctime(time) | lookup hostlist short AS hosts OUTPUT long AS host | makemv delim="," host | mvexpand host | lookup cray index nid AS host OUTPUT nodename | eval host=if(isnotnull(nodename),nodename,host) | fields + time,index,host,jobid,user | inputlookup append=TRUE max=99999999 job.csv.gz | outputlookup max=9999999999 job.csv.gz | where NOT isnull(jobid) | outputlookup max=999999999 jobstart.csv.gz

[MessageRate: Chatty host (by day)]
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
search = earliest=-0h@h | stats count by host date_hour | append [search index=summary search_name=hourlyCountByHost earliest=-0d@d | eval host=orig_host] | append [ search index=summary search_name=dailyCountByHost earliest=-7d@d | eval host=orig_host ] | timechart span=1d sum(count) by host
vsid = *:gl00t0kr
disabled = 1

[MessageRate: SilentHosts]
description = hosts silent for more than an hour but less than a week
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = | metadata type=hosts | eval hoursAgo=round((now()-lastTime)/3600,1) | search hoursAgo<7 hoursAgo>1 | sort -lastTime | convert timeformat="%Y-%m-%d %H:%M:%S" ctime(lastTime) as lastHeardFrom | table host,lastHeardFrom,hoursAgo
vsid = gl2mzxki
disabled = 1

[MessageRate: Chatty host (by hour)]
cron_schedule = 5 * * * *
displayview = report_builder_display
enableSched = 1
request.ui_dispatch_view = report_builder_display
search = sourcetype=syslog earliest=-0h@h | stats count by host date_hour | append [search index=summary search_name=hourlyCountByHost earliest=-24h | eval host=orig_host] | timechart span=1h sum(count) by host
vsid = *:gl00v7z8
disabled = 1

[MessageRate: LoudHosts]
cron_schedule = 5 * * * *
description = louder than usual hosts (today's count minus the weekly median)
displayview = flashtimeline
enableSched = 1
request.ui_dispatch_view = flashtimeline
search = index=summary search_name=hourlyCountByHost earliest=-24h | stats sum(count) as today by orig_host | join orig_host [search index=summary search_name=dailyCountByHost earliest=-14d | stats median(count) as median by orig_host] | eval delta=today-median | eval host=orig_host | sort -delta -today | table host,today,median,delta
vsid = gl2nfy5a
disabled = 1

[MessageRate: QuietHosts]
cron_schedule = 5 * * * *
description = hosts quiet for more than a day but less than a week
displayview = flashtimeline
enableSched = 1
request.ui_dispatch_view = flashtimeline
search = | metadata type=hosts | eval hoursAgo=round((now()-lastTime)/3600,1) | search hoursAgo>24 hoursAgo<168  | sort -lastTime | convert timeformat="%Y-%m-%d %H:%M:%S" ctime(lastTime) as lastHeardFrom | table host,lastHeardFrom,hoursAgo
vsid = gl2oj1qi
disabled = 1

[MessageRate: hourlyCountByHost]
action.email.inline = 1
action.summary_index = 1
alert.suppress = 0
alert.suppress.period = h
alert.track = 0
cron_schedule = 1 * * * *
dispatch.earliest_time = -1h@h
dispatch.latest_time = -1m
enableSched = 1
realtime_schedule = 0
search = * | stats count by host
disabled = 1

[MessageRate: dailyCountByHost]
action.email.inline = 1
action.summary_index = 1
alert.suppress = 0
alert.suppress.period = h
alert.track = 0
cron_schedule = 10 0 * * *
dispatch.earliest_time = -1d@d
dispatch.latest_time = -10m
enableSched = 1
realtime_schedule = 0
search = index=summary search_name=hourlyCountByHost | stats sum(count) as count by orig_host
disabled = 1

[read-only file system]
action.email = 1
action.email.sendresults = 1
action.email.to = redsky-admin@mailgate.sandia.gov
counttype = number of events
cron_schedule = 0 5 * * *
description = File systems mounted read-only on Lustre service nodes during previous 24 hours
dispatch.earliest_time = -1d
enableSched = 1
quantity = 0
relation = greater than
search = (mds OR oss ) AND Remounting filesystem read-only

[Indexing workload]
dispatch.lookups = 1
dispatch.spawn_process = 1
vsid = *:draenoep

[redsky_check_syslog]
action.email.reportServerEnabled = 0
alert.track = 1
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=hpc_redsky sourcetype=syslog fail* OR denied* OR fault* OR segmentation* OR reject* OR oops* OR warn* OR error* OR killed* OR oom* OR refuse* OR revoke* OR crash* OR alert* OR critical* OR attention* OR NOTIC*E OR not OR healthcheck OR kern.err NOT host=*-sp NOT host=*-cmm* NOT host=10* NOT host=admin* NOT host=mce* NOT moab\[ NOT kern.warning NOT kern.notice NOT kern.info NOT authentication NOT ccache NOT Lustr* NOT ECC NOT ticks NOT publickey NOT CSG NOT csg NOT INFO: NOT Non-Fatal NOT default NOT ibtrackerror NOT without NOT correct NOT ERROR_ADDRESS NOT Normal NOT mce_handler NOT mcelog.cron NOT edac-util NOT edac_core NOT handle_mm_fault NOT do_page_fault NOT error_exit NOT overflow NOT anyway NOT fs/inotify NOT Sis NOT sshd:session NOT mailgate NOT kuserok NOT CHANNEL NOT overflow NOT Transaction NOT ACPI NOT rupt NOT DIMM NOT channel NOT /etc/modprobe.d NOT banks NOT mptbase NOT redsky-tools NOT authpriv.notice NOT authpriv.debug NOT throttling NOT ntpd NOT warning: NOT daemon.notice NOT "ib0: packet len" NOT "is resyncing" NOT "too long to send" NOT fishwrap NOT user.notice | sort host
vsid = gusvz1uk

[OSS Load Average]
action.email = 1
action.email.inline = 1
action.email.reportServerEnabled = 0
action.email.sendresults = 1
action.email.subject = Splunk Alert: $name$ -- Action: Check Red Sky OSS, MDS, and login  nodes for excessive load.
action.email.to = redsky-admin@sandia.gov
alert.severity = 4
alert.suppress = 1
alert.suppress.period = 15m
alert.track = 0
counttype = number of events
cron_schedule = */15 * * * *
description = CPU load average on Red Sky mds, oss, and login servers
dispatch.earliest_time = -15m
dispatch.latest_time = now
displayview = flashtimeline
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_view = flashtimeline
search = index=hpc_redsky (NOTIFICATION OR ATTENTION OR WARNING OR CRITICAL) AND "load average"
vsid = gs3rvxsb

[MOI: by host,eventtype]
action.email.reportServerEnabled = 0
alert.track = 1
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = tag=moi | stats count dc(user) dc(jobid) values(jobid) values(user) by host,eventtype | sort -count | table host count eventtype dc(jobid) values(jobid) dc(user) values(user)
vsid = gw66e8s4

[MOI: by user,eventtype]
action.email.reportServerEnabled = 0
alert.track = 1
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = tag=moi | stats count dc(host) dc(jobid) values(jobid) values(host) by user,eventtype | nomv values(host) | sort -count | table user count eventtype dc(jobid) values(jobid) dc(host) values(host)
vsid = gw66hz7r

[COS: hostStateChanges]
action.email.reportServerEnabled = 0
alert.track = 1
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
action.email.inline = 1
action.summary_index = 1
alert.expires = 1h
alert.suppress = 0
cron_schedule = */6 * * * *
enableSched = 0
realtime_schedule = 0
search = [search index=summary StateName | head 1 | eval query="(index=summary _time="._time." StateName) OR (_time>"._time." eventtype=cos_*)" | return $query] | tail 50000 | statechange
vsid = hdwlnydd
disabled = 1

[COS: DailyDownHostlist]
action.email.reportServerEnabled = 0
alert.track = 1
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=summary newState=HardDown OR newState=SoftDown | rename orig_host AS host | timechart span=1d count AS TotalHostDownEvents dc(host) AS DistinctHostsDown list(host) as hostlist1 | eval hostlist2=mvjoin(hostlist1,",") | lookup hostlist long AS hostlist2 OUTPUT short AS HostList | sort -_time | eval Date=strftime(_time,"%m/%d/%y") | table Date TotalHostDownEvents DistinctHostsDown HostList
vsid = gxddgk6n
disabled = 1

[COS: Top25FlappingHosts]
action.email.reportServerEnabled = 0
alert.track = 1
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=summary newState=HardDown OR newState=SoftDown | rename orig_host AS host | eval Date=strftime(_time,"%m/%d/%y") | sort + Date | ctable maxrows=25 host Date
vsid = gxdugdu0
disabled = 1

[COS: MOI Before]
action.email.reportServerEnabled = 0
alert.track = 1
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = tag=moi | eval MOItime=_time | join host usetime=true earlier=false overwrite=false  [search index=summary newState=* | rename orig_host AS host | rename oldState AS currentState | rename newState AS nextState | eval NextStateTransTime=_time] |  lookup job host | eval SecondsUntilNextStateChange=NextStateTransTime-_time | streamstats count as rank by host,NextStateTransTime | table index host MOItime eventtype user jobid currentState SecondsUntilNextStateChange nextState rank  
vsid = gxkvp35q
disabled = 1

[SLURM: sinfo -Rl]
action.email.reportServerEnabled = 0
alert.track = 1
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = [search sourcetype=slurmctld "state set to" OR "setting DOWN" | dedup nodes | search NOT slurmstate=IDLE NOT slurmstate=ALLOCATED | stats values(node) AS nodess | eval nodelist=mvjoin(hosts," OR node=") | eval query="sourcetype=slurmctld update_node node=".nodelist | return $query ] | transaction node startswith="reason set to" endswith="state set to" maxspan=0s | dedup node
vsid = gy3ica2s

[COS: HostsOfInterest]
action.email.reportServerEnabled = 0
alert.track = 1
dispatch.earliest_time = -90d@d
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = [|savedsearch "COS: hostStateChanges" | search StateName | tail 1 | eval hl=StateName_HardDown.",".StateName_SoftDown | lookup hostlist short AS hl OUTPUT long AS hosts | eval hostlist=replace(hosts, ",", " OR orig_host=") | eval query="index=summary (newState=HardDown OR newState=SoftDown) orig_host=".hostlist | return $query] | dedup orig_host | rename orig_host AS node | rename newState AS COS | join node type=outer [|savedsearch "SLURM: sinfo -Rl"] | eval ChangedStateAt=strftime(_time, "%Y-%m-%d %H:%M:%S") | eval _time=now() | lookup job host AS node OUTPUT jobid
vsid = gy3jutuz
disabled = 1

[COS: Host Counts]
action.email.reportServerEnabled = 0
alert.track = 1
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
search = index=summary newState orig_host | bucket span=1h _time | reverse | nointerpolate | chart max(UpCount) AS Up max(SuspectCount) AS Suspect max(HardDownCount) AS HardDown max(SoftDownCount) AS SoftDown by _time
vsid = *:gxi2wfq3
disabled = 1

[COS: System TTI distribution]
action.email.reportServerEnabled = 0
alert.track = 1
dispatch.earliest_time = -90d@d
dispatch.latest_time = now
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
search = index=summary eventtype=redsky_*  | transaction orig_index startswith="eventtype=redsky_*-USR" endswith="eventtype=redsky_USR-ERR"  | eval hrs=duration/3600 | chart count over hrs bins=50
vsid = *:gxv0dpmk
disabled = 1

[COS: System TTR distribution]
action.email.reportServerEnabled = 0
alert.track = 1
dispatch.earliest_time = -90d@d
dispatch.latest_time = now
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
search = index=summary eventtype=redsky_*  | transaction orig_index startswith="eventtype=redsky_*-ERR" endswith="eventtype=redsky_ERR-USR"  | eval hrs=duration/3600 | chart count over hrs bins=50
vsid = *:gxv0frlc
disabled = 1

[COS: System MTTI]
action.email.reportServerEnabled = 0
alert.track = 1
dispatch.earliest_time = -90d@d
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
search = index=summary eventtype=redsky_* | cosbydate | streamstats sum(USR_hrs) AS USRhrs_week sum(ERR_count) AS ERRcount_week window=7 global=false | eval MTTI_week=USRhrs_week/ERRcount_week | streamstats sum(USR_hrs) AS USRhrs_month sum(ERR_count) AS ERRcount_month window=28 global=false | eval MTTI_week=USRhrs_week/ERRcount_week | eval MTTI_month=USRhrs_month/ERRcount_month | timechart max(MTTI_week) AS "1-week MTTI" max(MTTI_month) AS "4-week MTTI"
vsid = *:gxv0p9jz
disabled = 1

[sysnames]
alert.track = 0
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = | eventcount summarize=false index=* NOT (index=summary OR index=history OR index=main)| where count>0 | eval name=replace(index, "^hpc_", "") | eval search="index=".index | fields + name search
vsid = hj76m2mh
